# [tmux: Getting Started](https://github.com/tmux/tmux/wiki/Getting-Started)
# [tmux: Productive Mouse-Free Development 中文版](https://aquaregia.gitbooks.io/tmux-productive-mouse-free-development_zh/content/)
# `source-file [file]`: load a configuration file
# `set`: equal to `set-option [flags] [option] [value]`, config session option
# `setw`: equal to `set-window-option [option [value]`, config window option
# `display`: equal to `display-message`, displays the given text in a status bar
# `unbind`: equal to `unbind-key [key]`, removes a defined shortcut key
# `bind`: equal to `bind-key [key [command]`, create a new shortcut and the new shortcut require the prefix key
# `bind -n`: the new shortcut does not require pressing the prefix key
# `bind -r`: the new shortcut is repeatable and you can continue to press the shortcut without prefix key within the maximum repetition limit

# -- general -------------------------------------------------------------------

# Colors
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*-256col*:Tc"

# Prefix key like GNU-Screen
unbind C-b
set -g prefix C-a
bind C-a send-prefix            # press C-a twice to send this command to the program in tmux

# Use vim shortcuts
setw -g mode-keys vi

# Enable mouse control
set -g mouse on

# Modify command delay
set -s escape-time 0            # the interval time between the prefix key and the command key

# Increase repeat timeout
set -sg repeat-time 600

# Increase scroll back history
set -g history-limit 100000

# Reload the .tmux.conf file with `prefix + r`
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# -- display -------------------------------------------------------------------

set -g base-index 1             # start windows numbering at 1
setw -g pane-base-index 1       # make pane numbering consistent with windows

setw -g automatic-rename off    # rename window to reflect current program
setw -g aggressive-resize on    # aggressively resize the chosen window according to screen resolution
set -g renumber-windows on      # renumber windows when a window is closed

set -g set-titles on            # set terminal title

set -g display-panes-time 800   # slightly longer pane indicators display time
set -g display-time 1000        # slightly longer status messages display time

set -g status-interval 1        # redraw status line every 1 second(s)

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off

# -- copy mode -----------------------------------------------------------------

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# tmux to sys clipboard
# todo: not work, https://github.com/tmux/tmux/wiki/Clipboard#how-to-configure---tmux-32-and-later
set -s copy-command 'xsel -i'

# plugin: [vim-tmux-clipboard](https://github.com/roxma/vim-tmux-clipboard?utm_source=recordnotfound.com)
set -g focus-events on

# -- buffers -------------------------------------------------------------------

bind b list-buffers         # list paste buffers
bind p paste-buffer -p      # paste from the top paste buffer
bind P choose-buffer        # choose which buffer to paste from

# -- screen --------------------------------------------------------------------

# Toggle popup window with t
bind t if-shell -F '#{==:#{session_name},popup}' {
    detach-client
} {
    display-popup -d '#{pane_current_path}' -xC -yC -w 80% -h 75% -E 'tmux attach-session -t popup || tmux new-session -s popup'
}

# -- window --------------------------------------------------------------------

# Create new window/pane in same directory
bind c new-window -c "#{pane_current_path}"
unbind %
bind | split-window -hc "#{pane_current_path}"
unbind '"'
bind - split-window -vc "#{pane_current_path}"

# Window navigation
unbind n
unbind p
bind -n M-h previous-window # select previous window
bind -n M-l next-window     # select next window
bind Tab last-window        # move to last active window

# -- pane ----------------------------------------------------------------------

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Pane navigation like vim
bind -r h select-pane -L    # select left pane
bind -r j select-pane -D    # select down pane
bind -r k select-pane -U    # select up pane
bind -r l select-pane -R    # select right pane
bind > swap-pane -D         # swap current pane with the next one
bind < swap-pane -U         # swap current pane with the previous one

# -- status bar ----------------------------------------------------------------
# ##: '#'                   #[attributes: set the color or property
# #H: hostname              #h: hostname without domain
# #S: session name          #P: current pane index
# #F: current window tag    #I: current window index
# #T: current window tittle #W: current window name
# #(shell-command): the first line of output from the shell-command
# #{?condition,true_option,false_option}: use conditional statements with the prefix '?' and separate the two options with ','

set -g status-bg black      # black background
set -g status-fg white      # white foreground(font colort)
set -g status-left-length 20
set -g status-right-length 50
set -g status-left '#{?pane_input_off,#[fg=colour160,#[fg=colour136]}[#[fg=colour136]#S:#I.#P#{?pane_input_off,#[fg=colour160],#[fg=colour136]}] '
set -g status-right '#[fg=green]%y-%m-%d %H:%M:%S '
setw -g window-status-style fg=colour244
setw -g window-status-current-style fg=colour166
setw -g window-status-activity-style fg=colour61
setw -g window-status-bell-style fg=colour61

# -- enable Yazi's image preview to work correctly in tmux ---------------------
set -g allow-passthrough on

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# -- tmux plugin manager(TPM) --------------------------------------------------
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# -- local config --------------------------------------------------------------

# Allow local customization in ~/.tmux_local.conf
if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'
